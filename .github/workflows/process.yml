name: Email & Autopilot Scheduler

on:
  schedule:
    - cron: '*/5 * * * *'    # Every 5 minutes
    - cron: '0 2 * * *'      # Daily at 02:00 UTC
  workflow_dispatch:
  repository_dispatch:
    types: [autopilot-trigger]

permissions:
  contents: read

jobs:
  poll-mail:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.poll-gmail.outputs.status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug - Show environment info
        run: |
          echo "Python version: $(python --version)"
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la

      - name: Run Gmail Poller
        id: poll-gmail
        env:
          SUPABASE_URL:              ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          GOOGLE_CLIENT_ID:          ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET:      ${{ secrets.GOOGLE_CLIENT_SECRET }}
          ENCRYPTION_KEY:            ${{ secrets.ENCRYPTION_KEY }}
        run: |
          echo "Running Gmail poller..."
          python poll_gmail.py
          echo "status=gmail" >> $GITHUB_OUTPUT

  trigger-processing:
    needs: poll-mail
    runs-on: ubuntu-latest
    steps:
      - name: Debug - Check if token is set
        run: |
          if [ -z "${{ secrets.PROCESS_SECRET_TOKEN }}" ]; then
            echo "ERROR: PROCESS_SECRET_TOKEN is not set!"
            exit 1
          else
            echo "PROCESS_SECRET_TOKEN is set (length: ${#PROCESS_SECRET_TOKEN})"
          fi

      - name: Trigger Main Processing Endpoint on Render
        run: |
          echo "Calling: https://leads-ykkj.onrender.com/process?token=[REDACTED]"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            "https://leads-ykkj.onrender.com/process?token=${{ secrets.PROCESS_SECRET_TOKEN }}")
          echo "HTTP status: $HTTP_STATUS"
          
          # For debugging, let's also get the response body
          RESPONSE=$(curl -s "https://leads-ykkj.onrender.com/process?token=${{ secrets.PROCESS_SECRET_TOKEN }}")
          echo "Response: $RESPONSE"
          
          if [[ "$HTTP_STATUS" != "200" && "$HTTP_STATUS" != "204" && "$HTTP_STATUS" != "429" ]]; then
            echo "::error::Processing failed with status: $HTTP_STATUS"
            exit 1
          fi


